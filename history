    1  clear
    2  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    3  cat <<EOF | sudo tee /etc/docker/daemon.json
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2"
}
EOF

    4  sudo usermod -aG docker $USER
    5  echo $USER
    6  sudo chmod 666 /var/run/docker.sock
    7  sudo systemctl start docker.service
    8  sudo systemctl status docker.service
    9  sudo systemctl enable docker.service
   10  sudo systemctl restart docker
   11  sudo rm /etc/containerd/config.toml
   12  sudo systemctl restart containerd
   13  sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
   14  echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
   15  sudo apt update
   16  curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
   17  sudo curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
   18  sudo apt-get install -y apt-transport-https ca-certificates curl gpg
   19  sudo curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
   20  curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
   21  sudo curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
   22  sudo curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
   23  sudo echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" > /etc/apt/sources.list.d/kubernetes.list
   24  echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" > /etc/apt/sources.list.d/kubernetes.list
   25  rm -rf /etc/apt/sources.list.d/kubernetes.list
   26  sudo rm -rf /etc/apt/sources.list.d/kubernetes.list
   27  echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" > /etc/apt/sources.list.d/kubernetes.list
   28  sudo echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" > /etc/apt/sources.list.d/kubernetes.list
   29  sudo touch /etc/apt/sources.list.d/kubernetes.list
   30  sudo echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" > /etc/apt/sources.list.d/kubernetes.list
   31  sudo vi /etc/apt/sources.list.d/kubernetes.list
   32  sudo apt update
   33  sudo apt-get install -y kubelet kubeadm kubectl
   34  history
   35  clear
   36  sudo apt-mark hold kubelet kubeadm kubectl
   37  sudo kubeadm init --pod-network-cidr 10.0.0.0/16 --ignore-preflight-errors=all
   38  mkdir -p $HOME/.kube
   39  kubectl get node
   40  kubectl get pod --all-namespaces
   41  kubectl apply -f https://github.com/weaveworks/weave/releases/download/v2.8.1/weave-daemonset-k8s.yaml
   42  kubectl get pod --all-namespaces
   43  kubectl get node
   44  kubectl
   45  kubectl run --help
   46  kubectl run n1 --image=nginx --port=80 
   47  kubectl get pod
   48  kubectl describe pod n1
   49  kubectl expose --help
   50  kubectl expose pod n1 --name=n1svc --port=80 --target-port=80 --type=Nodeport
   51  kubectl expose pod n1 --name=n1svc --port=80 --target-port=80 --type=NodePort
   52  kubectl get svc
   53  history

       1  clear
    2  sudo apt-get install -y     apt-transport-https     ca-certificates     curl     gnupg     lsb-release
    3  echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    4  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    5  echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/nul
    6  sudo apt-get update
    7  sudo apt-get install docker-ce docker-ce-cli containerd.io
    8  cat <<EOF | sudo tee /etc/docker/daemon.json
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2"
}
EOF

    9  sudo usermod -aG docker $USER
   10  sudo chmod 666 /var/run/docker.sock
   11  sudo systemctl enable docker.service
   12  sudo rm /etc/containerd/config.toml
   13  mkdir -p /etc/apt/keyrings/
   14  sudo mkdir -p /etc/apt/keyrings/
   15  sudo curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
   16  sudo echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" > /etc/apt/sources.list.d/kubernetes.list
   17  sudo vi /etc/apt/sources.list.d/kubernetes.list
   18* sudo apt install kubeadm 
   19  which kubeadm
   20  sudo apt-get install -y kubelet kubeadm kubectl
   21  kubeadm join 172.31.60.59:6443 --token 4r7wbj.bf5v7f183ki4fok5 .--discovery-token-ca-cert-hash sha256:345a85464aecf2161a9754ea62149550253f81e2b04a88058ef62c9238ff2e7a 
   22  kubeadm join 172.31.60.59:6443 --token 4r7wbj.bf5v7f183ki4fok5 --discovery-token-ca-cert-hash sha256:345a85464aecf2161a9754ea62149550253f81e2b04a88058ef62c9238ff2e7a
   23  sudo kubeadm join 172.31.60.59:6443 --token 4r7wbj.bf5v7f183ki4fok5 --discovery-token-ca-cert-hash sha256:345a85464aecf2161a9754ea62149550253f81e2b04a88058ef62c9238ff2e7a
   24  sudo systemctl restart containerd
   25  sudo kubeadm join 172.31.60.59:6443 --token 4r7wbj.bf5v7f183ki4fok5 --discovery-token-ca-cert-hash sha256:345a85464aecf2161a9754ea62149550253f81e2b04a88058ef62c9238ff2e7a
   26  history